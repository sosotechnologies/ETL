apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s"  .Values.env .Values.localmaster.name}}
  labels:
    app.kubernetes.io/name: {{ printf "%s-%s"  .Values.env .Values.localmaster.name}}
    helm.sh/chart: {{ include "semoss.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  replicas: {{ .Values.localmaster.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{printf "%s-%s"  .Values.env .Values.localmaster.name}}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{printf "%s-%s"  .Values.env .Values.localmaster.name}}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{printf "%s-%s"  .Values.env .Values.localmaster.name}}
          image: "{{ .Values.localmaster.image.repository }}:{{ .Values.localmaster.image.tag }}"
          imagePullPolicy: {{ .Values.localmaster.image.pullPolicy }}
          ports:
          - containerPort: {{.Values.localmaster.service.port}}
          {{- if .Values.localmaster.useStorage}}
          volumeMounts:
          - mountPath: /opt/h2-data
            name:  {{.Values.localmaster.volume.name}}
          {{- end}}
      {{- if .Values.localmaster.useStorage}}
      volumes:
      - name: {{.Values.localmaster.volume.name}}
        persistentVolumeClaim:
          claimName: {{.Values.localmaster.volume.persistentVolumeClaimName}}
      {{- end}}
