# Default values for semoss.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env: "semoss"

semoss:
  replicaCount: 1
  name: semoss
  image:
    repository: semoss/docker
    tag: "latest"
    pullPolicy: Always
  
  readinessProbe:
    turnOn: true
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 5
  livenessProbe:
    turnOn: true
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 5
  nameOverride: ""
  fullnameOverride: "UA-66598715-4"
  monolithCookie: "monolith"
  googleAnalytics: ""
  security:
    securityOn: false
    anonymousUserOn: false
    anonymousUserUploadOn: false
  social:
    setSocial:
    redirectUrl:
    enable_native_login:
    enable_native_registration:
    enable_google_login:
    google_client_id:
    google_secret_key:
    google_redirect_uri:
    google_scope:  "https://www.googleapis.com/auth/forms https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/cloud-language"
    google_access_type: "online"
    google_maps_api:
    enable_github_login:
    github_client_id:
    github_secret_key:
    github_redirect_uri:
    github_scope: "public_repo"
    enable_ms_login:
    ms_authority:
    ms_tenant:
    ms_client_id:
    ms_secret_key:
    ms_redirect_uri:
    ms_scope: "User.Read"
  r:
    r_on: true
    r_connection_type: "JRI"
    r_pool_size:
    r_user_recovery:
    containerName: "rserve"
    image:
      repository: semoss/docker
      tag: "latest"
    
  service:
    type: ClusterIP
    port: 8080
    nodePort: 

  environmentVariables:
    AZURE_ACCT_KEY: ""
    AZURE_ACCT_NAME: ""
    AWS_REGION: ""
    AWS_BUCKET: ""
    SEMOSS_IS_CLUSTER: ""
    SEMOSS_STORAGE_PROVIDER: ""
    AZCONN: ""
    SECURITY_ON: "false"
    FILE_UPLOAD_LIMIT: ""


  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

nginx:
  replicaCount: 1
  name: nginx
  image:
    repository: semoss/nginx2
    tag: extended
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""
  cookieName: ""
  livenessProbe:
    initialDelaySeconds:
    timeoutSeconds:
    periodSeconds:
    
  service:
    type: NodePort
    port: 80
    nodePort: 30100

security:
  replicaCount: 1
  name: security
  image:
    repository: kunal0137/security
    tag: latest
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""
  useStorage: false
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: sec
    persistentVolumeClaimName: secpvc

localmaster:
  replicaCount: 1
  name: localmaster
  image:
    repository: kunal0137/localmaster
    tag: latest
    pullPolicy: IfNotPresent
  useStorage: false
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 1521
  volume:
    name: lm
    persistentVolumeClaimName: lmpvc

themes:
  replicaCount: 1
  name: themes
  image:
    repository: kunal0137/themes
    tag: latest
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 1521

zk:
  replicaCount: 1
  name: zk
  image:
    repository: zookeeper
    tag: 3.4.14
    pullPolicy: IfNotPresent

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 2181

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
