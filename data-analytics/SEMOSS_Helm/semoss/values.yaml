# Default values for semoss.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

env: "semoss"

imagePullSecrets:

semoss:
  replicaCount: 1
  name: semoss
  image:
    repository: semoss/docker
    tag: "latest"
    pullPolicy: IfNotPresent
  
  readinessProbe:
    turnOn: true
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 5
  livenessProbe:
    turnOn: true
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 5
  nameOverride: ""
  fullnameOverride: ""
  monolithCookie: "monolith"
  googleAnalytics: ""
  security:
    securityOn: true
    anonymousUserOn: false
    anonymousUserUploadOn: false
  social:
    setSocial: "true"
    redirectUrl: "http://my.example.org/SemossWeb/"
    enable_native_login: "true"
    enable_native_registration: "true"
    enable_google_login:
    google_client_id:
    google_secret_key:
    google_redirect_uri:
    google_scope:  "https://www.googleapis.com/auth/forms https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/cloud-language"
    google_access_type: "online"
    google_maps_api:
    enable_github_login:
    github_client_id:
    github_secret_key:
    github_redirect_uri:
    github_scope: "public_repo"
    enable_ms_login:
    ms_authority:
    ms_tenant:
    ms_client_id:
    ms_secret_key:
    ms_redirect_uri:
    ms_scope: "User.Read"
  r:
    r_on: true
    r_connection_type: "User_Rserve_Dedicated"
    r_pool_size:
    r_user_recovery:
    containerName: "rserve"
    image:
      repository: semoss/docker
      tag: "latest"
    
  service:
    type: ClusterIP
    port: 8080
    nodePort: 

  environmentVariables:
    AZURE_ACCT_KEY: ""
    AZURE_ACCT_NAME: ""
    S3_REGION: ""
    S3_BUCKET: ""
    S3_ACCESS_KEY: ""
    S3_SECRET_KEY: ""
    SEMOSS_IS_CLUSTER: "true"
    SEMOSS_STORAGE_PROVIDER: ""
    AZCONN: ""
    SECURITY_ON: "true"
    FILE_UPLOAD_LIMIT: ""


ingress:
  name: "ingress"
  enabled: true
  # set up for nginx ingress - if other ingress is used, enable sticky session as appropriate
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/session-cookie-name: route-semoss
    nginx.ingress.kubernetes.io/session-cookie-path: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/app-root: /SemossWeb
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
  tls: []
  #    - hosts:
  #        - "my.example.org"
  #        - "*.test.org"
  #      secretName: my-tls-sercret
  hosts:
    - host: my.example.org
      paths:
      - /

security:
  replicaCount: 1
  name: security
  image:
    repository: semoss/h2
    tag: 1.4.200
    pullPolicy: IfNotPresent
  nameOverride: ""
  fullnameOverride: ""
  useStorage: true
  # storageClass: "-"
  storageSize: 3Gi
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: sec
    persistentVolumeClaimName: security-volume
    persistentVolumeReclaimPolicy: Retain

localmaster:
  replicaCount: 1
  name: localmaster
  image:
    repository: semoss/h2
    tag: 1.4.200
    pullPolicy: IfNotPresent
  useStorage: true
  # storageClass: "-"
  storageSize: 3Gi
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: lm
    persistentVolumeClaimName: localmaster-volume
    persistentVolumeReclaimPolicy: Retain

scheduler:
  replicaCount: 1
  name: scheduler
  image:
    repository: semoss/h2
    tag: 1.4.200
    pullPolicy: IfNotPresent
  useStorage: true
  # storageClass: "-"
  storageSize: 2Gi
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: scheduler
    persistentVolumeClaimName: scheduler-volume
    persistentVolumeReclaimPolicy: Retain

themes:
  replicaCount: 1
  name: themes
  image:
    repository: semoss/h2
    tag: 1.4.200
    pullPolicy: IfNotPresent
  useStorage: true
  # storageClass: "-"
  storageSize: 1Gi
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: themes
    persistentVolumeClaimName: themes-volume
    persistentVolumeReclaimPolicy: Retain

usertracking:
  enabled: true
  replicaCount: 1
  name: usertracking
  image:
    repository: semoss/h2
    tag: 1.4.200
    pullPolicy: IfNotPresent
  useStorage: true
  # storageClass: "-"
  storageSize: 3Gi
  nameOverride: ""
  fullnameOverride: ""
  service:
    type: ClusterIP
    port: 1521
  volume:
    name: usertracking
    persistentVolumeClaimName: usertracking-volume
    persistentVolumeReclaimPolicy: Retain


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
